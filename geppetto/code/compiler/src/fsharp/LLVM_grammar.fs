// Implementation file for parser generated by fsyacc
module LLVM_grammar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Text.Lexing
open Microsoft.FSharp.Text.Parsing.ParseHelpers
# 1 "..\src\fsharp\LLVM_grammar.fsy"

open LLVM

// This file is generated by fsyacc
//
// it provides a limited parser for LLVM .S files produced by CLANG. 

let parse_error x = 
  failwithf "parsing error: %A" x

# 17 "..\src\fsharp\LLVM_grammar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | ZEXT
  | ZEROINITIALIZER
  | XOR
  | VOID
  | UNNAMEDADDR
  | UNDEF
  | UGT
  | ULT
  | TYPE
  | TO
  | TRUNC
  | TARGET
  | TAIL
  | STORE
  | STAR
  | SQLABEL
  | SWITCH
  | SUB
  | SREM
  | SLT
  | SLE
  | SIGNEXT
  | SHL
  | SGT
  | SGE
  | SEXT
  | SEMI
  | SELECT
  | RPAREN
  | RETURN
  | READONLY
  | READNONE
  | RBRACKET
  | RBRACE
  | RANGLE
  | PRIVATE
  | PREDS
  | PHI
  | OR
  | OPAQUE
  | NULL
  | NUW
  | NSW
  | NOUNWIND
  | NOCAPTURE
  | NOALIAS
  | NEWLINE
  | NE
  | MVAR
  | MUL
  | MODULEID
  | LSHR
  | LPAREN
  | LOAD
  | LBRACKET
  | LBRACE
  | LANGLE
  | LABEL
  | INT64
  | INT32
  | INT16
  | INT8
  | INT1
  | INTERNAL
  | INBOUNDS
  | ICMP
  | GLOBAL
  | GEP
  | FASTCC
  | EXACT
  | ETC
  | EQUALS
  | EQ
  | EOF
  | DEFINE
  | DECLARE
  | CROSS
  | CONSTANT
  | COMMON
  | COMMENT
  | COMMA
  | COLON
  | CALL
  | BYVAL
  | BR
  | BITCAST
  | ALLOCA
  | ALIGN
  | ABBREV
  | AND
  | ADD
  | INT of (System.Int32)
  | WORD of (string)
  | DOTVAR of (string)
  | VAR of (string)
  | STRING of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_ZEXT
    | TOKEN_ZEROINITIALIZER
    | TOKEN_XOR
    | TOKEN_VOID
    | TOKEN_UNNAMEDADDR
    | TOKEN_UNDEF
    | TOKEN_UGT
    | TOKEN_ULT
    | TOKEN_TYPE
    | TOKEN_TO
    | TOKEN_TRUNC
    | TOKEN_TARGET
    | TOKEN_TAIL
    | TOKEN_STORE
    | TOKEN_STAR
    | TOKEN_SQLABEL
    | TOKEN_SWITCH
    | TOKEN_SUB
    | TOKEN_SREM
    | TOKEN_SLT
    | TOKEN_SLE
    | TOKEN_SIGNEXT
    | TOKEN_SHL
    | TOKEN_SGT
    | TOKEN_SGE
    | TOKEN_SEXT
    | TOKEN_SEMI
    | TOKEN_SELECT
    | TOKEN_RPAREN
    | TOKEN_RETURN
    | TOKEN_READONLY
    | TOKEN_READNONE
    | TOKEN_RBRACKET
    | TOKEN_RBRACE
    | TOKEN_RANGLE
    | TOKEN_PRIVATE
    | TOKEN_PREDS
    | TOKEN_PHI
    | TOKEN_OR
    | TOKEN_OPAQUE
    | TOKEN_NULL
    | TOKEN_NUW
    | TOKEN_NSW
    | TOKEN_NOUNWIND
    | TOKEN_NOCAPTURE
    | TOKEN_NOALIAS
    | TOKEN_NEWLINE
    | TOKEN_NE
    | TOKEN_MVAR
    | TOKEN_MUL
    | TOKEN_MODULEID
    | TOKEN_LSHR
    | TOKEN_LPAREN
    | TOKEN_LOAD
    | TOKEN_LBRACKET
    | TOKEN_LBRACE
    | TOKEN_LANGLE
    | TOKEN_LABEL
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_INT1
    | TOKEN_INTERNAL
    | TOKEN_INBOUNDS
    | TOKEN_ICMP
    | TOKEN_GLOBAL
    | TOKEN_GEP
    | TOKEN_FASTCC
    | TOKEN_EXACT
    | TOKEN_ETC
    | TOKEN_EQUALS
    | TOKEN_EQ
    | TOKEN_EOF
    | TOKEN_DEFINE
    | TOKEN_DECLARE
    | TOKEN_CROSS
    | TOKEN_CONSTANT
    | TOKEN_COMMON
    | TOKEN_COMMENT
    | TOKEN_COMMA
    | TOKEN_COLON
    | TOKEN_CALL
    | TOKEN_BYVAL
    | TOKEN_BR
    | TOKEN_BITCAST
    | TOKEN_ALLOCA
    | TOKEN_ALIGN
    | TOKEN_ABBREV
    | TOKEN_AND
    | TOKEN_ADD
    | TOKEN_INT
    | TOKEN_WORD
    | TOKEN_DOTVAR
    | TOKEN_VAR
    | TOKEN_STRING
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startstart
    | NONTERM_start
    | NONTERM_op
    | NONTERM_whatever
    | NONTERM_errors
    | NONTERM_expr
    | NONTERM_pre
    | NONTERM_pres
    | NONTERM_indexes
    | NONTERM_label
    | NONTERM_nounwind
    | NONTERM_callhdr
    | NONTERM_calltail
    | NONTERM_vartyp
    | NONTERM_call
    | NONTERM_branches
    | NONTERM_line
    | NONTERM_lines
    | NONTERM_typ
    | NONTERM_typs
    | NONTERM_typDef
    | NONTERM_initializer
    | NONTERM_globalQualifier
    | NONTERM_globalDef
    | NONTERM_globalStr
    | NONTERM_decls
    | NONTERM_words
    | NONTERM_funDef
    | NONTERM_funDecl
    | NONTERM_funSig
    | NONTERM_funBody
    | NONTERM_formal
    | NONTERM_formals
    | NONTERM_blocks
    | NONTERM_vars
    | NONTERM_preds
    | NONTERM_block
    | NONTERM_arg
    | NONTERM_args

// This function maps tokens to integers indexes
let tagOfToken (t:token) = 
  match t with
  | ZEXT  -> 0 
  | ZEROINITIALIZER  -> 1 
  | XOR  -> 2 
  | VOID  -> 3 
  | UNNAMEDADDR  -> 4 
  | UNDEF  -> 5 
  | UGT  -> 6 
  | ULT  -> 7 
  | TYPE  -> 8 
  | TO  -> 9 
  | TRUNC  -> 10 
  | TARGET  -> 11 
  | TAIL  -> 12 
  | STORE  -> 13 
  | STAR  -> 14 
  | SQLABEL  -> 15 
  | SWITCH  -> 16 
  | SUB  -> 17 
  | SREM  -> 18 
  | SLT  -> 19 
  | SLE  -> 20 
  | SIGNEXT  -> 21 
  | SHL  -> 22 
  | SGT  -> 23 
  | SGE  -> 24 
  | SEXT  -> 25 
  | SEMI  -> 26 
  | SELECT  -> 27 
  | RPAREN  -> 28 
  | RETURN  -> 29 
  | READONLY  -> 30 
  | READNONE  -> 31 
  | RBRACKET  -> 32 
  | RBRACE  -> 33 
  | RANGLE  -> 34 
  | PRIVATE  -> 35 
  | PREDS  -> 36 
  | PHI  -> 37 
  | OR  -> 38 
  | OPAQUE  -> 39 
  | NULL  -> 40 
  | NUW  -> 41 
  | NSW  -> 42 
  | NOUNWIND  -> 43 
  | NOCAPTURE  -> 44 
  | NOALIAS  -> 45 
  | NEWLINE  -> 46 
  | NE  -> 47 
  | MVAR  -> 48 
  | MUL  -> 49 
  | MODULEID  -> 50 
  | LSHR  -> 51 
  | LPAREN  -> 52 
  | LOAD  -> 53 
  | LBRACKET  -> 54 
  | LBRACE  -> 55 
  | LANGLE  -> 56 
  | LABEL  -> 57 
  | INT64  -> 58 
  | INT32  -> 59 
  | INT16  -> 60 
  | INT8  -> 61 
  | INT1  -> 62 
  | INTERNAL  -> 63 
  | INBOUNDS  -> 64 
  | ICMP  -> 65 
  | GLOBAL  -> 66 
  | GEP  -> 67 
  | FASTCC  -> 68 
  | EXACT  -> 69 
  | ETC  -> 70 
  | EQUALS  -> 71 
  | EQ  -> 72 
  | EOF  -> 73 
  | DEFINE  -> 74 
  | DECLARE  -> 75 
  | CROSS  -> 76 
  | CONSTANT  -> 77 
  | COMMON  -> 78 
  | COMMENT  -> 79 
  | COMMA  -> 80 
  | COLON  -> 81 
  | CALL  -> 82 
  | BYVAL  -> 83 
  | BR  -> 84 
  | BITCAST  -> 85 
  | ALLOCA  -> 86 
  | ALIGN  -> 87 
  | ABBREV  -> 88 
  | AND  -> 89 
  | ADD  -> 90 
  | INT _ -> 91 
  | WORD _ -> 92 
  | DOTVAR _ -> 93 
  | VAR _ -> 94 
  | STRING _ -> 95 

// This function maps integers indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_ZEXT 
  | 1 -> TOKEN_ZEROINITIALIZER 
  | 2 -> TOKEN_XOR 
  | 3 -> TOKEN_VOID 
  | 4 -> TOKEN_UNNAMEDADDR 
  | 5 -> TOKEN_UNDEF 
  | 6 -> TOKEN_UGT 
  | 7 -> TOKEN_ULT 
  | 8 -> TOKEN_TYPE 
  | 9 -> TOKEN_TO 
  | 10 -> TOKEN_TRUNC 
  | 11 -> TOKEN_TARGET 
  | 12 -> TOKEN_TAIL 
  | 13 -> TOKEN_STORE 
  | 14 -> TOKEN_STAR 
  | 15 -> TOKEN_SQLABEL 
  | 16 -> TOKEN_SWITCH 
  | 17 -> TOKEN_SUB 
  | 18 -> TOKEN_SREM 
  | 19 -> TOKEN_SLT 
  | 20 -> TOKEN_SLE 
  | 21 -> TOKEN_SIGNEXT 
  | 22 -> TOKEN_SHL 
  | 23 -> TOKEN_SGT 
  | 24 -> TOKEN_SGE 
  | 25 -> TOKEN_SEXT 
  | 26 -> TOKEN_SEMI 
  | 27 -> TOKEN_SELECT 
  | 28 -> TOKEN_RPAREN 
  | 29 -> TOKEN_RETURN 
  | 30 -> TOKEN_READONLY 
  | 31 -> TOKEN_READNONE 
  | 32 -> TOKEN_RBRACKET 
  | 33 -> TOKEN_RBRACE 
  | 34 -> TOKEN_RANGLE 
  | 35 -> TOKEN_PRIVATE 
  | 36 -> TOKEN_PREDS 
  | 37 -> TOKEN_PHI 
  | 38 -> TOKEN_OR 
  | 39 -> TOKEN_OPAQUE 
  | 40 -> TOKEN_NULL 
  | 41 -> TOKEN_NUW 
  | 42 -> TOKEN_NSW 
  | 43 -> TOKEN_NOUNWIND 
  | 44 -> TOKEN_NOCAPTURE 
  | 45 -> TOKEN_NOALIAS 
  | 46 -> TOKEN_NEWLINE 
  | 47 -> TOKEN_NE 
  | 48 -> TOKEN_MVAR 
  | 49 -> TOKEN_MUL 
  | 50 -> TOKEN_MODULEID 
  | 51 -> TOKEN_LSHR 
  | 52 -> TOKEN_LPAREN 
  | 53 -> TOKEN_LOAD 
  | 54 -> TOKEN_LBRACKET 
  | 55 -> TOKEN_LBRACE 
  | 56 -> TOKEN_LANGLE 
  | 57 -> TOKEN_LABEL 
  | 58 -> TOKEN_INT64 
  | 59 -> TOKEN_INT32 
  | 60 -> TOKEN_INT16 
  | 61 -> TOKEN_INT8 
  | 62 -> TOKEN_INT1 
  | 63 -> TOKEN_INTERNAL 
  | 64 -> TOKEN_INBOUNDS 
  | 65 -> TOKEN_ICMP 
  | 66 -> TOKEN_GLOBAL 
  | 67 -> TOKEN_GEP 
  | 68 -> TOKEN_FASTCC 
  | 69 -> TOKEN_EXACT 
  | 70 -> TOKEN_ETC 
  | 71 -> TOKEN_EQUALS 
  | 72 -> TOKEN_EQ 
  | 73 -> TOKEN_EOF 
  | 74 -> TOKEN_DEFINE 
  | 75 -> TOKEN_DECLARE 
  | 76 -> TOKEN_CROSS 
  | 77 -> TOKEN_CONSTANT 
  | 78 -> TOKEN_COMMON 
  | 79 -> TOKEN_COMMENT 
  | 80 -> TOKEN_COMMA 
  | 81 -> TOKEN_COLON 
  | 82 -> TOKEN_CALL 
  | 83 -> TOKEN_BYVAL 
  | 84 -> TOKEN_BR 
  | 85 -> TOKEN_BITCAST 
  | 86 -> TOKEN_ALLOCA 
  | 87 -> TOKEN_ALIGN 
  | 88 -> TOKEN_ABBREV 
  | 89 -> TOKEN_AND 
  | 90 -> TOKEN_ADD 
  | 91 -> TOKEN_INT 
  | 92 -> TOKEN_WORD 
  | 93 -> TOKEN_DOTVAR 
  | 94 -> TOKEN_VAR 
  | 95 -> TOKEN_STRING 
  | 98 -> TOKEN_end_of_input
  | 96 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startstart 
    | 1 -> NONTERM_start 
    | 2 -> NONTERM_op 
    | 3 -> NONTERM_op 
    | 4 -> NONTERM_op 
    | 5 -> NONTERM_op 
    | 6 -> NONTERM_op 
    | 7 -> NONTERM_op 
    | 8 -> NONTERM_whatever 
    | 9 -> NONTERM_whatever 
    | 10 -> NONTERM_whatever 
    | 11 -> NONTERM_errors 
    | 12 -> NONTERM_errors 
    | 13 -> NONTERM_errors 
    | 14 -> NONTERM_errors 
    | 15 -> NONTERM_expr 
    | 16 -> NONTERM_expr 
    | 17 -> NONTERM_expr 
    | 18 -> NONTERM_expr 
    | 19 -> NONTERM_expr 
    | 20 -> NONTERM_expr 
    | 21 -> NONTERM_expr 
    | 22 -> NONTERM_expr 
    | 23 -> NONTERM_expr 
    | 24 -> NONTERM_expr 
    | 25 -> NONTERM_expr 
    | 26 -> NONTERM_expr 
    | 27 -> NONTERM_expr 
    | 28 -> NONTERM_expr 
    | 29 -> NONTERM_expr 
    | 30 -> NONTERM_expr 
    | 31 -> NONTERM_expr 
    | 32 -> NONTERM_expr 
    | 33 -> NONTERM_expr 
    | 34 -> NONTERM_expr 
    | 35 -> NONTERM_expr 
    | 36 -> NONTERM_expr 
    | 37 -> NONTERM_expr 
    | 38 -> NONTERM_expr 
    | 39 -> NONTERM_expr 
    | 40 -> NONTERM_expr 
    | 41 -> NONTERM_expr 
    | 42 -> NONTERM_expr 
    | 43 -> NONTERM_expr 
    | 44 -> NONTERM_expr 
    | 45 -> NONTERM_pre 
    | 46 -> NONTERM_pre 
    | 47 -> NONTERM_pres 
    | 48 -> NONTERM_pres 
    | 49 -> NONTERM_indexes 
    | 50 -> NONTERM_indexes 
    | 51 -> NONTERM_label 
    | 52 -> NONTERM_nounwind 
    | 53 -> NONTERM_nounwind 
    | 54 -> NONTERM_nounwind 
    | 55 -> NONTERM_callhdr 
    | 56 -> NONTERM_callhdr 
    | 57 -> NONTERM_callhdr 
    | 58 -> NONTERM_calltail 
    | 59 -> NONTERM_calltail 
    | 60 -> NONTERM_calltail 
    | 61 -> NONTERM_vartyp 
    | 62 -> NONTERM_vartyp 
    | 63 -> NONTERM_call 
    | 64 -> NONTERM_call 
    | 65 -> NONTERM_branches 
    | 66 -> NONTERM_branches 
    | 67 -> NONTERM_line 
    | 68 -> NONTERM_line 
    | 69 -> NONTERM_line 
    | 70 -> NONTERM_line 
    | 71 -> NONTERM_line 
    | 72 -> NONTERM_line 
    | 73 -> NONTERM_line 
    | 74 -> NONTERM_line 
    | 75 -> NONTERM_lines 
    | 76 -> NONTERM_lines 
    | 77 -> NONTERM_typ 
    | 78 -> NONTERM_typ 
    | 79 -> NONTERM_typ 
    | 80 -> NONTERM_typ 
    | 81 -> NONTERM_typ 
    | 82 -> NONTERM_typ 
    | 83 -> NONTERM_typ 
    | 84 -> NONTERM_typ 
    | 85 -> NONTERM_typ 
    | 86 -> NONTERM_typ 
    | 87 -> NONTERM_typ 
    | 88 -> NONTERM_typ 
    | 89 -> NONTERM_typ 
    | 90 -> NONTERM_typ 
    | 91 -> NONTERM_typ 
    | 92 -> NONTERM_typ 
    | 93 -> NONTERM_typ 
    | 94 -> NONTERM_typ 
    | 95 -> NONTERM_typ 
    | 96 -> NONTERM_typs 
    | 97 -> NONTERM_typs 
    | 98 -> NONTERM_typs 
    | 99 -> NONTERM_typDef 
    | 100 -> NONTERM_initializer 
    | 101 -> NONTERM_initializer 
    | 102 -> NONTERM_initializer 
    | 103 -> NONTERM_globalQualifier 
    | 104 -> NONTERM_globalQualifier 
    | 105 -> NONTERM_globalQualifier 
    | 106 -> NONTERM_globalQualifier 
    | 107 -> NONTERM_globalDef 
    | 108 -> NONTERM_globalStr 
    | 109 -> NONTERM_globalStr 
    | 110 -> NONTERM_decls 
    | 111 -> NONTERM_decls 
    | 112 -> NONTERM_decls 
    | 113 -> NONTERM_decls 
    | 114 -> NONTERM_decls 
    | 115 -> NONTERM_decls 
    | 116 -> NONTERM_decls 
    | 117 -> NONTERM_decls 
    | 118 -> NONTERM_decls 
    | 119 -> NONTERM_decls 
    | 120 -> NONTERM_words 
    | 121 -> NONTERM_words 
    | 122 -> NONTERM_words 
    | 123 -> NONTERM_words 
    | 124 -> NONTERM_funDef 
    | 125 -> NONTERM_funDef 
    | 126 -> NONTERM_funDef 
    | 127 -> NONTERM_funDef 
    | 128 -> NONTERM_funDecl 
    | 129 -> NONTERM_funDecl 
    | 130 -> NONTERM_funSig 
    | 131 -> NONTERM_funBody 
    | 132 -> NONTERM_formal 
    | 133 -> NONTERM_formals 
    | 134 -> NONTERM_formals 
    | 135 -> NONTERM_formals 
    | 136 -> NONTERM_blocks 
    | 137 -> NONTERM_blocks 
    | 138 -> NONTERM_vars 
    | 139 -> NONTERM_vars 
    | 140 -> NONTERM_preds 
    | 141 -> NONTERM_preds 
    | 142 -> NONTERM_block 
    | 143 -> NONTERM_block 
    | 144 -> NONTERM_block 
    | 145 -> NONTERM_arg 
    | 146 -> NONTERM_args 
    | 147 -> NONTERM_args 
    | 148 -> NONTERM_args 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 98 
let _fsyacc_tagOfErrorTerminal = 96

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | ZEXT  -> "ZEXT" 
  | ZEROINITIALIZER  -> "ZEROINITIALIZER" 
  | XOR  -> "XOR" 
  | VOID  -> "VOID" 
  | UNNAMEDADDR  -> "UNNAMEDADDR" 
  | UNDEF  -> "UNDEF" 
  | UGT  -> "UGT" 
  | ULT  -> "ULT" 
  | TYPE  -> "TYPE" 
  | TO  -> "TO" 
  | TRUNC  -> "TRUNC" 
  | TARGET  -> "TARGET" 
  | TAIL  -> "TAIL" 
  | STORE  -> "STORE" 
  | STAR  -> "STAR" 
  | SQLABEL  -> "SQLABEL" 
  | SWITCH  -> "SWITCH" 
  | SUB  -> "SUB" 
  | SREM  -> "SREM" 
  | SLT  -> "SLT" 
  | SLE  -> "SLE" 
  | SIGNEXT  -> "SIGNEXT" 
  | SHL  -> "SHL" 
  | SGT  -> "SGT" 
  | SGE  -> "SGE" 
  | SEXT  -> "SEXT" 
  | SEMI  -> "SEMI" 
  | SELECT  -> "SELECT" 
  | RPAREN  -> "RPAREN" 
  | RETURN  -> "RETURN" 
  | READONLY  -> "READONLY" 
  | READNONE  -> "READNONE" 
  | RBRACKET  -> "RBRACKET" 
  | RBRACE  -> "RBRACE" 
  | RANGLE  -> "RANGLE" 
  | PRIVATE  -> "PRIVATE" 
  | PREDS  -> "PREDS" 
  | PHI  -> "PHI" 
  | OR  -> "OR" 
  | OPAQUE  -> "OPAQUE" 
  | NULL  -> "NULL" 
  | NUW  -> "NUW" 
  | NSW  -> "NSW" 
  | NOUNWIND  -> "NOUNWIND" 
  | NOCAPTURE  -> "NOCAPTURE" 
  | NOALIAS  -> "NOALIAS" 
  | NEWLINE  -> "NEWLINE" 
  | NE  -> "NE" 
  | MVAR  -> "MVAR" 
  | MUL  -> "MUL" 
  | MODULEID  -> "MODULEID" 
  | LSHR  -> "LSHR" 
  | LPAREN  -> "LPAREN" 
  | LOAD  -> "LOAD" 
  | LBRACKET  -> "LBRACKET" 
  | LBRACE  -> "LBRACE" 
  | LANGLE  -> "LANGLE" 
  | LABEL  -> "LABEL" 
  | INT64  -> "INT64" 
  | INT32  -> "INT32" 
  | INT16  -> "INT16" 
  | INT8  -> "INT8" 
  | INT1  -> "INT1" 
  | INTERNAL  -> "INTERNAL" 
  | INBOUNDS  -> "INBOUNDS" 
  | ICMP  -> "ICMP" 
  | GLOBAL  -> "GLOBAL" 
  | GEP  -> "GEP" 
  | FASTCC  -> "FASTCC" 
  | EXACT  -> "EXACT" 
  | ETC  -> "ETC" 
  | EQUALS  -> "EQUALS" 
  | EQ  -> "EQ" 
  | EOF  -> "EOF" 
  | DEFINE  -> "DEFINE" 
  | DECLARE  -> "DECLARE" 
  | CROSS  -> "CROSS" 
  | CONSTANT  -> "CONSTANT" 
  | COMMON  -> "COMMON" 
  | COMMENT  -> "COMMENT" 
  | COMMA  -> "COMMA" 
  | COLON  -> "COLON" 
  | CALL  -> "CALL" 
  | BYVAL  -> "BYVAL" 
  | BR  -> "BR" 
  | BITCAST  -> "BITCAST" 
  | ALLOCA  -> "ALLOCA" 
  | ALIGN  -> "ALIGN" 
  | ABBREV  -> "ABBREV" 
  | AND  -> "AND" 
  | ADD  -> "ADD" 
  | INT _ -> "INT" 
  | WORD _ -> "WORD" 
  | DOTVAR _ -> "DOTVAR" 
  | VAR _ -> "VAR" 
  | STRING _ -> "STRING" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | ZEXT  -> (null : System.Object) 
  | ZEROINITIALIZER  -> (null : System.Object) 
  | XOR  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | UNNAMEDADDR  -> (null : System.Object) 
  | UNDEF  -> (null : System.Object) 
  | UGT  -> (null : System.Object) 
  | ULT  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUNC  -> (null : System.Object) 
  | TARGET  -> (null : System.Object) 
  | TAIL  -> (null : System.Object) 
  | STORE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | SQLABEL  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | SUB  -> (null : System.Object) 
  | SREM  -> (null : System.Object) 
  | SLT  -> (null : System.Object) 
  | SLE  -> (null : System.Object) 
  | SIGNEXT  -> (null : System.Object) 
  | SHL  -> (null : System.Object) 
  | SGT  -> (null : System.Object) 
  | SGE  -> (null : System.Object) 
  | SEXT  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | SELECT  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | READONLY  -> (null : System.Object) 
  | READNONE  -> (null : System.Object) 
  | RBRACKET  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | RANGLE  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | PREDS  -> (null : System.Object) 
  | PHI  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | OPAQUE  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | NUW  -> (null : System.Object) 
  | NSW  -> (null : System.Object) 
  | NOUNWIND  -> (null : System.Object) 
  | NOCAPTURE  -> (null : System.Object) 
  | NOALIAS  -> (null : System.Object) 
  | NEWLINE  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | MVAR  -> (null : System.Object) 
  | MUL  -> (null : System.Object) 
  | MODULEID  -> (null : System.Object) 
  | LSHR  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | LOAD  -> (null : System.Object) 
  | LBRACKET  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | LANGLE  -> (null : System.Object) 
  | LABEL  -> (null : System.Object) 
  | INT64  -> (null : System.Object) 
  | INT32  -> (null : System.Object) 
  | INT16  -> (null : System.Object) 
  | INT8  -> (null : System.Object) 
  | INT1  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | INBOUNDS  -> (null : System.Object) 
  | ICMP  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | GEP  -> (null : System.Object) 
  | FASTCC  -> (null : System.Object) 
  | EXACT  -> (null : System.Object) 
  | ETC  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | EOF  -> (null : System.Object) 
  | DEFINE  -> (null : System.Object) 
  | DECLARE  -> (null : System.Object) 
  | CROSS  -> (null : System.Object) 
  | CONSTANT  -> (null : System.Object) 
  | COMMON  -> (null : System.Object) 
  | COMMENT  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | CALL  -> (null : System.Object) 
  | BYVAL  -> (null : System.Object) 
  | BR  -> (null : System.Object) 
  | BITCAST  -> (null : System.Object) 
  | ALLOCA  -> (null : System.Object) 
  | ALIGN  -> (null : System.Object) 
  | ABBREV  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | ADD  -> (null : System.Object) 
  | INT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WORD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DOTVAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | VAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 55us; 65535us; 11us; 12us; 17us; 18us; 35us; 36us; 37us; 38us; 41us; 42us; 43us; 44us; 46us; 47us; 48us; 49us; 51us; 52us; 53us; 54us; 56us; 57us; 58us; 59us; 62us; 63us; 64us; 65us; 68us; 69us; 70us; 71us; 72us; 73us; 74us; 75us; 78us; 79us; 80us; 81us; 83us; 84us; 85us; 86us; 88us; 89us; 93us; 94us; 98us; 99us; 104us; 105us; 106us; 107us; 109us; 110us; 111us; 112us; 114us; 115us; 116us; 117us; 119us; 120us; 121us; 122us; 124us; 125us; 126us; 127us; 129us; 130us; 131us; 132us; 134us; 135us; 136us; 137us; 139us; 140us; 141us; 142us; 144us; 145us; 149us; 150us; 152us; 153us; 156us; 157us; 159us; 160us; 162us; 163us; 172us; 173us; 185us; 186us; 197us; 198us; 234us; 235us; 245us; 246us; 248us; 249us; 272us; 273us; 305us; 407us; 3us; 65535us; 145us; 146us; 249us; 250us; 330us; 331us; 4us; 65535us; 33us; 34us; 39us; 40us; 60us; 61us; 76us; 77us; 1us; 65535us; 242us; 243us; 2us; 65535us; 165us; 193us; 194us; 193us; 2us; 65535us; 165us; 166us; 194us; 195us; 4us; 65535us; 12us; 13us; 150us; 151us; 153us; 154us; 198us; 199us; 5us; 65535us; 236us; 237us; 251us; 252us; 255us; 256us; 257us; 258us; 262us; 263us; 0us; 65535us; 7us; 65535us; 202us; 203us; 242us; 182us; 275us; 267us; 389us; 267us; 397us; 267us; 402us; 267us; 405us; 267us; 2us; 65535us; 206us; 207us; 232us; 233us; 3us; 65535us; 183us; 227us; 227us; 227us; 268us; 227us; 3us; 65535us; 183us; 184us; 227us; 228us; 268us; 269us; 2us; 65535us; 238us; 239us; 265us; 266us; 5us; 65535us; 275us; 274us; 389us; 274us; 397us; 274us; 402us; 274us; 405us; 274us; 5us; 65535us; 275us; 276us; 389us; 399us; 397us; 399us; 402us; 403us; 405us; 406us; 61us; 65535us; 10us; 11us; 16us; 17us; 19us; 20us; 34us; 35us; 40us; 41us; 45us; 46us; 50us; 51us; 55us; 56us; 61us; 62us; 66us; 72us; 67us; 68us; 77us; 78us; 82us; 83us; 87us; 88us; 90us; 91us; 92us; 93us; 95us; 96us; 97us; 98us; 100us; 101us; 103us; 104us; 108us; 109us; 113us; 114us; 118us; 119us; 123us; 124us; 128us; 129us; 133us; 134us; 138us; 139us; 143us; 144us; 147us; 152us; 148us; 149us; 155us; 156us; 158us; 159us; 161us; 162us; 164us; 165us; 167us; 168us; 177us; 178us; 180us; 181us; 182us; 183us; 196us; 197us; 230us; 305us; 244us; 245us; 247us; 248us; 270us; 272us; 285us; 286us; 288us; 298us; 291us; 292us; 307us; 297us; 315us; 298us; 319us; 299us; 329us; 300us; 334us; 301us; 339us; 302us; 342us; 303us; 368us; 303us; 370us; 303us; 372us; 303us; 376us; 302us; 379us; 298us; 384us; 304us; 394us; 304us; 409us; 305us; 3us; 65535us; 288us; 289us; 315us; 316us; 379us; 380us; 9us; 65535us; 0us; 345us; 340us; 345us; 343us; 345us; 345us; 345us; 347us; 345us; 349us; 345us; 354us; 345us; 357us; 345us; 359us; 345us; 1us; 65535us; 300us; 330us; 3us; 65535us; 318us; 329us; 323us; 324us; 325us; 326us; 9us; 65535us; 0us; 347us; 340us; 347us; 343us; 347us; 345us; 347us; 347us; 347us; 349us; 347us; 354us; 347us; 357us; 347us; 359us; 347us; 9us; 65535us; 0us; 349us; 340us; 349us; 343us; 349us; 345us; 349us; 347us; 349us; 349us; 349us; 354us; 349us; 357us; 349us; 359us; 349us; 9us; 65535us; 0us; 2us; 340us; 341us; 343us; 344us; 345us; 346us; 347us; 348us; 349us; 350us; 354us; 355us; 357us; 358us; 359us; 360us; 5us; 65535us; 362us; 363us; 364us; 365us; 366us; 367us; 381us; 382us; 386us; 387us; 4us; 65535us; 342us; 343us; 368us; 369us; 370us; 371us; 372us; 373us; 2us; 65535us; 339us; 340us; 376us; 377us; 4us; 65535us; 342us; 374us; 368us; 374us; 370us; 374us; 372us; 374us; 1us; 65535us; 374us; 375us; 2us; 65535us; 384us; 393us; 394us; 393us; 2us; 65535us; 384us; 385us; 394us; 395us; 2us; 65535us; 389us; 390us; 397us; 398us; 0us; 65535us; 0us; 65535us; 2us; 65535us; 389us; 396us; 397us; 396us; 2us; 65535us; 230us; 408us; 409us; 408us; 2us; 65535us; 230us; 231us; 409us; 410us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 59us; 63us; 68us; 70us; 73us; 76us; 81us; 87us; 88us; 96us; 99us; 103us; 107us; 110us; 116us; 122us; 184us; 188us; 198us; 200us; 204us; 214us; 224us; 234us; 240us; 245us; 248us; 253us; 255us; 258us; 261us; 264us; 265us; 266us; 269us; 272us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 5us; 2us; 5us; 46us; 1us; 6us; 1us; 6us; 1us; 6us; 7us; 6us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 6us; 1us; 6us; 1us; 6us; 1us; 7us; 1us; 7us; 7us; 7us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 7us; 1us; 7us; 7us; 7us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 7us; 2us; 8us; 9us; 2us; 8us; 9us; 2us; 8us; 9us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 8us; 1us; 8us; 2us; 11us; 12us; 1us; 11us; 1us; 13us; 1us; 15us; 1us; 15us; 7us; 15us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 15us; 1us; 15us; 1us; 15us; 1us; 16us; 1us; 16us; 7us; 16us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 16us; 1us; 16us; 1us; 16us; 1us; 17us; 7us; 17us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 7us; 18us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 19us; 7us; 19us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 19us; 1us; 19us; 1us; 19us; 1us; 20us; 1us; 20us; 7us; 20us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 20us; 1us; 20us; 1us; 20us; 2us; 21us; 22us; 1us; 21us; 7us; 21us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 21us; 1us; 21us; 1us; 21us; 7us; 22us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 22us; 1us; 22us; 1us; 22us; 1us; 23us; 1us; 23us; 7us; 23us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 23us; 1us; 23us; 1us; 23us; 1us; 24us; 7us; 24us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 24us; 1us; 24us; 1us; 24us; 1us; 25us; 7us; 25us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 25us; 1us; 25us; 7us; 25us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 26us; 7us; 26us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 26us; 1us; 26us; 7us; 26us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 27us; 7us; 27us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 27us; 1us; 27us; 7us; 27us; 89us; 91us; 92us; 93us; 94us; 95us; 8us; 28us; 29us; 30us; 31us; 32us; 33us; 34us; 35us; 1us; 28us; 7us; 28us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 28us; 1us; 28us; 1us; 28us; 1us; 29us; 7us; 29us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 29us; 1us; 29us; 1us; 29us; 1us; 30us; 7us; 30us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 30us; 1us; 30us; 1us; 30us; 1us; 31us; 7us; 31us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 32us; 7us; 32us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 32us; 1us; 32us; 1us; 32us; 1us; 33us; 7us; 33us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 34us; 7us; 34us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 34us; 1us; 34us; 1us; 34us; 1us; 35us; 7us; 35us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 35us; 1us; 35us; 1us; 35us; 1us; 36us; 7us; 36us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 36us; 1us; 36us; 2us; 37us; 38us; 1us; 37us; 7us; 37us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 37us; 1us; 37us; 7us; 38us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 38us; 1us; 38us; 1us; 39us; 7us; 39us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 39us; 1us; 39us; 7us; 39us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 39us; 1us; 39us; 7us; 39us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 39us; 1us; 40us; 7us; 40us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 40us; 2us; 41us; 42us; 8us; 41us; 42us; 89us; 91us; 92us; 93us; 94us; 95us; 2us; 41us; 42us; 1us; 41us; 1us; 41us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 42us; 1us; 43us; 7us; 43us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 43us; 1us; 43us; 7us; 43us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 44us; 7us; 44us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 44us; 2us; 45us; 46us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 45us; 1us; 46us; 1us; 46us; 1us; 46us; 2us; 47us; 48us; 1us; 48us; 1us; 48us; 1us; 49us; 7us; 49us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 49us; 1us; 49us; 1us; 51us; 1us; 51us; 1us; 55us; 1us; 55us; 2us; 56us; 57us; 1us; 56us; 1us; 58us; 1us; 58us; 1us; 59us; 1us; 59us; 1us; 59us; 1us; 59us; 1us; 59us; 2us; 61us; 62us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 61us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 65us; 1us; 65us; 1us; 65us; 1us; 65us; 1us; 65us; 1us; 66us; 1us; 67us; 1us; 67us; 1us; 67us; 1us; 68us; 7us; 68us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 68us; 1us; 68us; 7us; 68us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 68us; 1us; 68us; 2us; 69us; 70us; 1us; 69us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 72us; 1us; 72us; 2us; 73us; 74us; 2us; 73us; 87us; 7us; 74us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 74us; 1us; 75us; 1us; 75us; 1us; 75us; 1us; 77us; 1us; 78us; 1us; 79us; 1us; 80us; 1us; 81us; 1us; 82us; 1us; 83us; 1us; 83us; 1us; 83us; 7us; 83us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 83us; 1us; 84us; 1us; 84us; 1us; 84us; 1us; 85us; 7us; 85us; 89us; 91us; 92us; 93us; 94us; 95us; 1us; 85us; 1us; 86us; 1us; 87us; 1us; 88us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 8us; 89us; 91us; 92us; 93us; 94us; 95us; 96us; 97us; 7us; 89us; 91us; 92us; 93us; 94us; 95us; 99us; 7us; 89us; 91us; 92us; 93us; 94us; 95us; 107us; 8us; 89us; 91us; 92us; 93us; 94us; 95us; 108us; 109us; 7us; 89us; 91us; 92us; 93us; 94us; 95us; 129us; 7us; 89us; 91us; 92us; 93us; 94us; 95us; 130us; 7us; 89us; 91us; 92us; 93us; 94us; 95us; 132us; 7us; 89us; 91us; 92us; 93us; 94us; 95us; 145us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 96us; 1us; 96us; 4us; 99us; 107us; 108us; 109us; 4us; 99us; 107us; 108us; 109us; 1us; 99us; 1us; 100us; 1us; 101us; 1us; 102us; 1us; 103us; 1us; 103us; 1us; 104us; 1us; 104us; 1us; 105us; 1us; 106us; 1us; 107us; 1us; 107us; 1us; 107us; 2us; 108us; 109us; 2us; 108us; 109us; 2us; 108us; 109us; 2us; 108us; 109us; 1us; 108us; 1us; 108us; 1us; 108us; 1us; 110us; 1us; 110us; 1us; 110us; 1us; 111us; 1us; 111us; 1us; 111us; 1us; 112us; 1us; 112us; 1us; 113us; 1us; 113us; 1us; 114us; 1us; 114us; 1us; 115us; 1us; 115us; 1us; 115us; 1us; 115us; 1us; 115us; 1us; 116us; 1us; 116us; 1us; 116us; 1us; 117us; 1us; 117us; 1us; 118us; 1us; 120us; 1us; 120us; 1us; 121us; 1us; 121us; 1us; 122us; 1us; 122us; 1us; 124us; 1us; 124us; 1us; 125us; 1us; 125us; 1us; 126us; 1us; 126us; 1us; 127us; 1us; 127us; 1us; 128us; 1us; 128us; 1us; 129us; 1us; 129us; 1us; 129us; 1us; 129us; 1us; 129us; 1us; 130us; 1us; 130us; 1us; 130us; 1us; 130us; 1us; 130us; 1us; 131us; 1us; 131us; 1us; 131us; 1us; 131us; 1us; 132us; 2us; 133us; 134us; 1us; 133us; 1us; 133us; 2us; 136us; 137us; 1us; 137us; 1us; 137us; 1us; 142us; 2us; 143us; 144us; 2us; 143us; 144us; 1us; 143us; 1us; 143us; 1us; 144us; 1us; 144us; 1us; 144us; 1us; 145us; 2us; 146us; 147us; 1us; 146us; 1us; 146us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 17us; 19us; 21us; 23us; 31us; 33us; 35us; 37us; 39us; 41us; 49us; 51us; 53us; 61us; 63us; 66us; 69us; 72us; 74us; 76us; 78us; 80us; 82us; 85us; 87us; 89us; 91us; 93us; 101us; 103us; 105us; 107us; 109us; 111us; 119us; 121us; 123us; 125us; 127us; 135us; 137us; 139us; 141us; 143us; 151us; 153us; 155us; 157us; 159us; 167us; 169us; 171us; 173us; 175us; 177us; 185us; 187us; 189us; 191us; 194us; 196us; 204us; 206us; 208us; 210us; 218us; 220us; 222us; 224us; 226us; 228us; 236us; 238us; 240us; 242us; 244us; 252us; 254us; 256us; 258us; 260us; 268us; 270us; 272us; 280us; 282us; 290us; 292us; 294us; 302us; 304us; 312us; 314us; 316us; 324us; 333us; 335us; 343us; 345us; 347us; 349us; 351us; 359us; 361us; 363us; 365us; 367us; 375us; 377us; 379us; 381us; 383us; 391us; 393us; 395us; 397us; 399us; 407us; 409us; 411us; 413us; 415us; 423us; 425us; 427us; 429us; 431us; 439us; 441us; 443us; 445us; 447us; 455us; 457us; 459us; 461us; 463us; 471us; 473us; 475us; 478us; 480us; 488us; 490us; 492us; 500us; 502us; 504us; 506us; 514us; 516us; 518us; 526us; 528us; 530us; 538us; 540us; 542us; 550us; 552us; 555us; 564us; 567us; 569us; 571us; 573us; 575us; 577us; 579us; 581us; 583us; 591us; 593us; 595us; 603us; 605us; 613us; 615us; 618us; 620us; 622us; 624us; 626us; 628us; 630us; 632us; 635us; 637us; 639us; 641us; 649us; 651us; 653us; 655us; 657us; 659us; 661us; 664us; 666us; 668us; 670us; 672us; 674us; 676us; 678us; 680us; 683us; 685us; 687us; 689us; 691us; 693us; 695us; 697us; 699us; 701us; 703us; 705us; 707us; 709us; 711us; 713us; 715us; 717us; 719us; 721us; 723us; 725us; 727us; 729us; 731us; 733us; 735us; 737us; 739us; 741us; 743us; 745us; 753us; 755us; 757us; 765us; 767us; 769us; 772us; 774us; 776us; 778us; 780us; 782us; 784us; 786us; 788us; 790us; 792us; 794us; 796us; 798us; 800us; 802us; 804us; 806us; 808us; 811us; 814us; 822us; 824us; 826us; 828us; 830us; 832us; 834us; 836us; 838us; 840us; 842us; 844us; 846us; 848us; 856us; 858us; 860us; 862us; 864us; 866us; 874us; 876us; 878us; 880us; 882us; 890us; 899us; 907us; 915us; 924us; 932us; 940us; 948us; 956us; 958us; 960us; 962us; 964us; 966us; 968us; 970us; 972us; 974us; 976us; 978us; 983us; 988us; 990us; 992us; 994us; 996us; 998us; 1000us; 1002us; 1004us; 1006us; 1008us; 1010us; 1012us; 1014us; 1017us; 1020us; 1023us; 1026us; 1028us; 1030us; 1032us; 1034us; 1036us; 1038us; 1040us; 1042us; 1044us; 1046us; 1048us; 1050us; 1052us; 1054us; 1056us; 1058us; 1060us; 1062us; 1064us; 1066us; 1068us; 1070us; 1072us; 1074us; 1076us; 1078us; 1080us; 1082us; 1084us; 1086us; 1088us; 1090us; 1092us; 1094us; 1096us; 1098us; 1100us; 1102us; 1104us; 1106us; 1108us; 1110us; 1112us; 1114us; 1116us; 1118us; 1120us; 1122us; 1124us; 1126us; 1128us; 1130us; 1132us; 1134us; 1136us; 1138us; 1140us; 1143us; 1145us; 1147us; 1150us; 1152us; 1154us; 1156us; 1159us; 1162us; 1164us; 1166us; 1168us; 1170us; 1172us; 1174us; 1177us; 1179us; |]
let _fsyacc_action_rows = 411
let _fsyacc_actionTableElements = [|7us; 16503us; 11us; 351us; 46us; 359us; 48us; 361us; 74us; 342us; 75us; 339us; 79us; 356us; 94us; 317us; 0us; 49152us; 0us; 16385us; 0us; 16386us; 0us; 16387us; 0us; 16388us; 0us; 16389us; 1us; 16389us; 80us; 190us; 1us; 32768us; 64us; 9us; 1us; 32768us; 52us; 10us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 16434us; 80us; 196us; 1us; 32768us; 28us; 14us; 0us; 16390us; 1us; 32768us; 52us; 16us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 9us; 19us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 7us; 32768us; 14us; 306us; 21us; 308us; 28us; 21us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 0us; 16391us; 1us; 32768us; 87us; 23us; 1us; 32768us; 91us; 24us; 1us; 16393us; 80us; 25us; 1us; 32768us; 48us; 26us; 1us; 32768us; 92us; 27us; 1us; 32768us; 48us; 28us; 1us; 32768us; 91us; 29us; 0us; 16392us; 1us; 16396us; 42us; 31us; 0us; 16395us; 0us; 16397us; 2us; 16398us; 41us; 30us; 42us; 32us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 37us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16399us; 2us; 16398us; 41us; 30us; 42us; 32us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 43us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16400us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 48us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16401us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 53us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16402us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 58us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16403us; 2us; 16398us; 41us; 30us; 42us; 32us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 64us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16404us; 14us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 69us; 67us; 70us; 296us; 94us; 277us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 70us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16405us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 74us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16406us; 2us; 16398us; 41us; 30us; 42us; 32us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 80us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16407us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 85us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16408us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 9us; 90us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 6us; 16409us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 9us; 95us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 6us; 16410us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 9us; 100us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 6us; 16411us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 8us; 32768us; 6us; 138us; 7us; 133us; 19us; 128us; 20us; 118us; 23us; 123us; 24us; 113us; 47us; 108us; 72us; 103us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 106us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16412us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 111us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16413us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 116us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16414us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 121us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16415us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 126us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16416us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 131us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16417us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 136us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16418us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 141us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16419us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 16394us; 80us; 22us; 0us; 16420us; 14us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 64us; 148us; 70us; 296us; 94us; 277us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 16434us; 80us; 196us; 0us; 16421us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 16434us; 80us; 196us; 0us; 16422us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 158us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 161us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16423us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 7us; 32768us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 54us; 185us; 83us; 312us; 0us; 16424us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 7us; 32768us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 80us; 169us; 83us; 312us; 2us; 32768us; 59us; 172us; 87us; 170us; 1us; 32768us; 91us; 171us; 0us; 16425us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 174us; 1us; 32768us; 87us; 175us; 1us; 32768us; 91us; 176us; 0us; 16426us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 7us; 32768us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 94us; 179us; 1us; 32768us; 9us; 180us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 6us; 16427us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 8us; 32768us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 52us; 213us; 83us; 312us; 94us; 229us; 0us; 16428us; 6us; 32768us; 5us; 7us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 187us; 1us; 32768us; 94us; 188us; 1us; 32768us; 32us; 189us; 0us; 16429us; 1us; 32768us; 94us; 191us; 1us; 32768us; 32us; 192us; 0us; 16430us; 1us; 16431us; 80us; 194us; 1us; 32768us; 54us; 185us; 0us; 16432us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 16434us; 80us; 196us; 0us; 16433us; 1us; 32768us; 94us; 201us; 0us; 16435us; 2us; 32768us; 12us; 202us; 82us; 204us; 0us; 16439us; 1us; 16441us; 68us; 205us; 0us; 16440us; 2us; 16444us; 80us; 208us; 88us; 206us; 0us; 16442us; 1us; 32768us; 48us; 209us; 1us; 32768us; 92us; 210us; 1us; 32768us; 48us; 211us; 1us; 32768us; 91us; 212us; 0us; 16443us; 2us; 32768us; 59us; 220us; 61us; 214us; 1us; 32768us; 14us; 215us; 1us; 32768us; 80us; 216us; 1us; 32768us; 70us; 217us; 1us; 32768us; 28us; 218us; 1us; 32768us; 14us; 219us; 0us; 16445us; 1us; 32768us; 80us; 221us; 1us; 32768us; 59us; 222us; 1us; 32768us; 80us; 223us; 1us; 32768us; 70us; 224us; 1us; 32768us; 28us; 225us; 1us; 32768us; 14us; 226us; 0us; 16446us; 2us; 32768us; 52us; 213us; 94us; 229us; 0us; 16447us; 1us; 32768us; 52us; 230us; 13us; 16532us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 1us; 32768us; 28us; 232us; 2us; 16444us; 80us; 208us; 88us; 206us; 0us; 16448us; 6us; 32768us; 5us; 6us; 40us; 5us; 67us; 8us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 236us; 1us; 32768us; 57us; 200us; 1us; 32768us; 46us; 238us; 2us; 32768us; 32us; 240us; 59us; 234us; 0us; 16449us; 0us; 16450us; 1us; 32768us; 71us; 242us; 21us; 32768us; 0us; 87us; 2us; 55us; 10us; 92us; 12us; 202us; 17us; 39us; 18us; 82us; 22us; 60us; 25us; 97us; 27us; 155us; 37us; 164us; 38us; 50us; 49us; 76us; 51us; 66us; 53us; 143us; 65us; 102us; 67us; 147us; 82us; 204us; 85us; 177us; 86us; 167us; 89us; 45us; 90us; 33us; 0us; 16451us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 32768us; 80us; 247us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 1us; 16394us; 80us; 22us; 0us; 16452us; 2us; 32768us; 57us; 200us; 62us; 253us; 0us; 16453us; 1us; 32768us; 94us; 254us; 1us; 32768us; 80us; 255us; 1us; 32768us; 57us; 200us; 1us; 32768us; 80us; 257us; 1us; 32768us; 57us; 200us; 0us; 16454us; 1us; 32768us; 59us; 260us; 1us; 32768us; 94us; 261us; 1us; 32768us; 80us; 262us; 1us; 32768us; 57us; 200us; 1us; 32768us; 54us; 264us; 1us; 32768us; 46us; 265us; 2us; 32768us; 32us; 240us; 59us; 234us; 0us; 16455us; 1us; 32768us; 3us; 268us; 2us; 32768us; 52us; 213us; 94us; 229us; 0us; 16456us; 13us; 32768us; 3us; 271us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 12us; 16457us; 5us; 16471us; 14us; 16471us; 21us; 16471us; 30us; 16471us; 31us; 16471us; 40us; 16471us; 44us; 16471us; 67us; 16471us; 83us; 16471us; 85us; 16471us; 91us; 16471us; 94us; 16471us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16458us; 1us; 32768us; 46us; 275us; 7us; 16460us; 12us; 202us; 13us; 244us; 16us; 259us; 29us; 270us; 82us; 204us; 84us; 251us; 94us; 241us; 0us; 16459us; 0us; 16461us; 0us; 16462us; 0us; 16463us; 0us; 16464us; 0us; 16465us; 0us; 16466us; 1us; 32768us; 91us; 284us; 1us; 32768us; 76us; 285us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 7us; 32768us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 32us; 287us; 44us; 309us; 83us; 312us; 0us; 16467us; 13us; 16482us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 1us; 32768us; 33us; 290us; 0us; 16468us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 7us; 32768us; 14us; 306us; 21us; 308us; 28us; 293us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 0us; 16469us; 0us; 16470us; 0us; 16471us; 0us; 16472us; 6us; 16474us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 7us; 16481us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 80us; 315us; 83us; 312us; 6us; 16483us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 9us; 32768us; 1us; 321us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 320us; 44us; 309us; 83us; 312us; 91us; 322us; 7us; 32768us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 95us; 335us; 7us; 32768us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 94us; 378us; 7us; 32768us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 94us; 383us; 7us; 32768us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 44us; 309us; 83us; 312us; 94us; 392us; 12us; 32768us; 5us; 6us; 14us; 306us; 21us; 308us; 30us; 311us; 31us; 310us; 40us; 5us; 44us; 309us; 67us; 8us; 83us; 312us; 85us; 15us; 91us; 4us; 94us; 3us; 0us; 16473us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 1us; 32768us; 87us; 313us; 1us; 32768us; 91us; 314us; 0us; 16479us; 13us; 16482us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 0us; 16480us; 1us; 32768us; 71us; 318us; 6us; 32768us; 8us; 319us; 35us; 332us; 63us; 323us; 66us; 327us; 77us; 328us; 78us; 325us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 0us; 16484us; 0us; 16485us; 0us; 16486us; 4us; 32768us; 63us; 323us; 66us; 327us; 77us; 328us; 78us; 325us; 0us; 16487us; 4us; 32768us; 63us; 323us; 66us; 327us; 77us; 328us; 78us; 325us; 0us; 16488us; 0us; 16489us; 0us; 16490us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 1us; 16394us; 80us; 22us; 0us; 16491us; 1us; 32768us; 4us; 333us; 1us; 32768us; 77us; 334us; 13us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 1us; 16493us; 80us; 336us; 1us; 32768us; 87us; 337us; 1us; 32768us; 91us; 338us; 0us; 16492us; 14us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 45us; 376us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 7us; 16503us; 11us; 351us; 46us; 359us; 48us; 361us; 74us; 342us; 75us; 339us; 79us; 356us; 94us; 317us; 0us; 16494us; 16us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 45us; 368us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 63us; 370us; 68us; 372us; 70us; 296us; 94us; 277us; 7us; 16503us; 11us; 351us; 46us; 359us; 48us; 361us; 74us; 342us; 75us; 339us; 79us; 356us; 94us; 317us; 0us; 16495us; 7us; 16503us; 11us; 351us; 46us; 359us; 48us; 361us; 74us; 342us; 75us; 339us; 79us; 356us; 94us; 317us; 0us; 16496us; 7us; 16503us; 11us; 351us; 46us; 359us; 48us; 361us; 74us; 342us; 75us; 339us; 79us; 356us; 94us; 317us; 0us; 16497us; 7us; 16503us; 11us; 351us; 46us; 359us; 48us; 361us; 74us; 342us; 75us; 339us; 79us; 356us; 94us; 317us; 0us; 16498us; 1us; 32768us; 92us; 352us; 1us; 32768us; 71us; 353us; 1us; 32768us; 95us; 354us; 7us; 16503us; 11us; 351us; 46us; 359us; 48us; 361us; 74us; 342us; 75us; 339us; 79us; 356us; 94us; 317us; 0us; 16499us; 1us; 32768us; 46us; 357us; 7us; 16503us; 11us; 351us; 46us; 359us; 48us; 361us; 74us; 342us; 75us; 339us; 79us; 356us; 94us; 317us; 0us; 16500us; 7us; 16503us; 11us; 351us; 46us; 359us; 48us; 361us; 74us; 342us; 75us; 339us; 79us; 356us; 94us; 317us; 0us; 16501us; 0us; 16502us; 3us; 16507us; 43us; 364us; 88us; 366us; 92us; 362us; 0us; 16504us; 3us; 16507us; 43us; 364us; 88us; 366us; 92us; 362us; 0us; 16505us; 3us; 16507us; 43us; 364us; 88us; 366us; 92us; 362us; 0us; 16506us; 16us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 45us; 368us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 63us; 370us; 68us; 372us; 70us; 296us; 94us; 277us; 0us; 16508us; 16us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 45us; 368us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 63us; 370us; 68us; 372us; 70us; 296us; 94us; 277us; 0us; 16509us; 16us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 45us; 368us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 63us; 370us; 68us; 372us; 70us; 296us; 94us; 277us; 0us; 16510us; 1us; 32768us; 55us; 388us; 0us; 16511us; 14us; 32768us; 3us; 295us; 21us; 307us; 39us; 294us; 45us; 376us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 0us; 16512us; 1us; 32768us; 52us; 379us; 13us; 16482us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 1us; 32768us; 28us; 381us; 3us; 16507us; 43us; 364us; 88us; 366us; 92us; 362us; 0us; 16513us; 1us; 32768us; 52us; 384us; 13us; 16519us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 1us; 32768us; 28us; 386us; 3us; 16507us; 43us; 364us; 88us; 366us; 92us; 362us; 0us; 16514us; 1us; 32768us; 46us; 389us; 8us; 16460us; 12us; 202us; 13us; 244us; 16us; 259us; 29us; 270us; 82us; 204us; 84us; 251us; 92us; 400us; 94us; 241us; 1us; 32768us; 33us; 391us; 0us; 16515us; 0us; 16516us; 1us; 16518us; 80us; 394us; 13us; 16519us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 0us; 16517us; 1us; 16520us; 46us; 397us; 8us; 16460us; 12us; 202us; 13us; 244us; 16us; 259us; 29us; 270us; 82us; 204us; 84us; 251us; 92us; 400us; 94us; 241us; 0us; 16521us; 0us; 16526us; 1us; 32768us; 81us; 401us; 2us; 32768us; 46us; 402us; 79us; 404us; 7us; 16460us; 12us; 202us; 13us; 244us; 16us; 259us; 29us; 270us; 82us; 204us; 84us; 251us; 94us; 241us; 0us; 16527us; 1us; 32768us; 46us; 405us; 7us; 16460us; 12us; 202us; 13us; 244us; 16us; 259us; 29us; 270us; 82us; 204us; 84us; 251us; 94us; 241us; 0us; 16528us; 0us; 16529us; 1us; 16531us; 80us; 409us; 13us; 16532us; 3us; 295us; 21us; 307us; 39us; 294us; 52us; 291us; 54us; 283us; 55us; 288us; 58us; 282us; 59us; 281us; 60us; 280us; 61us; 279us; 62us; 278us; 70us; 296us; 94us; 277us; 0us; 16530us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 16us; 18us; 20us; 34us; 47us; 49us; 51us; 52us; 54us; 68us; 81us; 83us; 97us; 105us; 106us; 108us; 110us; 112us; 114us; 116us; 118us; 120us; 121us; 123us; 124us; 125us; 128us; 142us; 155us; 157us; 164us; 165us; 168us; 182us; 195us; 197us; 204us; 205us; 219us; 232us; 234us; 241us; 242us; 256us; 269us; 271us; 278us; 279us; 293us; 306us; 308us; 315us; 316us; 319us; 333us; 346us; 348us; 355us; 356us; 371us; 385us; 398us; 400us; 407us; 408us; 421us; 423us; 430us; 431us; 434us; 448us; 461us; 463us; 470us; 471us; 485us; 498us; 500us; 507us; 508us; 522us; 535us; 537us; 551us; 558us; 572us; 585us; 587us; 601us; 608us; 622us; 635us; 637us; 651us; 658us; 667us; 681us; 694us; 696us; 703us; 704us; 718us; 731us; 733us; 740us; 741us; 755us; 768us; 770us; 777us; 778us; 792us; 805us; 807us; 814us; 815us; 829us; 842us; 844us; 851us; 852us; 866us; 879us; 881us; 888us; 889us; 903us; 916us; 918us; 925us; 926us; 940us; 953us; 955us; 962us; 963us; 977us; 990us; 992us; 993us; 1008us; 1022us; 1035us; 1037us; 1038us; 1051us; 1053us; 1054us; 1068us; 1081us; 1083us; 1097us; 1110us; 1112us; 1126us; 1139us; 1140us; 1154us; 1162us; 1163us; 1177us; 1185us; 1188us; 1190us; 1191us; 1198us; 1200us; 1202us; 1204us; 1205us; 1219us; 1227us; 1229us; 1243us; 1250us; 1264us; 1273us; 1274us; 1281us; 1283us; 1285us; 1287us; 1288us; 1290us; 1292us; 1293us; 1295us; 1297us; 1298us; 1312us; 1325us; 1327us; 1328us; 1330us; 1331us; 1334us; 1335us; 1337us; 1338us; 1341us; 1342us; 1344us; 1346us; 1348us; 1350us; 1351us; 1354us; 1356us; 1358us; 1360us; 1362us; 1364us; 1365us; 1367us; 1369us; 1371us; 1373us; 1375us; 1377us; 1378us; 1381us; 1382us; 1384us; 1398us; 1400us; 1403us; 1404us; 1411us; 1413us; 1415us; 1417us; 1420us; 1421us; 1422us; 1424us; 1446us; 1447us; 1461us; 1474us; 1476us; 1490us; 1503us; 1505us; 1506us; 1509us; 1510us; 1512us; 1514us; 1516us; 1518us; 1520us; 1521us; 1523us; 1525us; 1527us; 1529us; 1531us; 1533us; 1536us; 1537us; 1539us; 1542us; 1543us; 1557us; 1570us; 1583us; 1584us; 1586us; 1594us; 1595us; 1596us; 1597us; 1598us; 1599us; 1600us; 1601us; 1603us; 1605us; 1619us; 1627us; 1628us; 1642us; 1644us; 1645us; 1659us; 1667us; 1668us; 1669us; 1670us; 1671us; 1678us; 1686us; 1693us; 1703us; 1711us; 1719us; 1727us; 1735us; 1748us; 1749us; 1763us; 1764us; 1765us; 1766us; 1767us; 1769us; 1771us; 1772us; 1786us; 1787us; 1789us; 1796us; 1810us; 1811us; 1812us; 1813us; 1818us; 1819us; 1824us; 1825us; 1826us; 1827us; 1841us; 1843us; 1844us; 1846us; 1848us; 1862us; 1864us; 1866us; 1868us; 1869us; 1884us; 1892us; 1893us; 1910us; 1918us; 1919us; 1927us; 1928us; 1936us; 1937us; 1945us; 1946us; 1948us; 1950us; 1952us; 1960us; 1961us; 1963us; 1971us; 1972us; 1980us; 1981us; 1982us; 1986us; 1987us; 1991us; 1992us; 1996us; 1997us; 2014us; 2015us; 2032us; 2033us; 2050us; 2051us; 2053us; 2054us; 2069us; 2070us; 2072us; 2086us; 2088us; 2092us; 2093us; 2095us; 2109us; 2111us; 2115us; 2116us; 2118us; 2127us; 2129us; 2130us; 2131us; 2133us; 2147us; 2148us; 2150us; 2159us; 2160us; 2161us; 2163us; 2166us; 2174us; 2175us; 2177us; 2185us; 2186us; 2187us; 2189us; 2203us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 7us; 7us; 8us; 3us; 0us; 2us; 1us; 1us; 0us; 6us; 6us; 5us; 5us; 5us; 6us; 6us; 5us; 6us; 5us; 5us; 5us; 5us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 6us; 4us; 5us; 4us; 9us; 3us; 5us; 8us; 5us; 3us; 5us; 5us; 1us; 3us; 4us; 0us; 2us; 1us; 1us; 0us; 2us; 2us; 1us; 2us; 5us; 0us; 7us; 8us; 2us; 5us; 6us; 1us; 3us; 7us; 2us; 7us; 8us; 3us; 2us; 3us; 3us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 5us; 3us; 3us; 1us; 1us; 1us; 2us; 2us; 2us; 2us; 2us; 2us; 4us; 3us; 1us; 0us; 4us; 1us; 1us; 1us; 2us; 2us; 1us; 1us; 6us; 10us; 7us; 3us; 3us; 2us; 2us; 2us; 5us; 3us; 2us; 1us; 0us; 2us; 2us; 2us; 0us; 2us; 2us; 2us; 2us; 2us; 6us; 6us; 4us; 2us; 3us; 1us; 0us; 1us; 3us; 3us; 1us; 4us; 0us; 1us; 4us; 5us; 2us; 3us; 1us; 0us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 3us; 4us; 4us; 4us; 4us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 11us; 11us; 11us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 19us; 20us; 21us; 21us; 21us; 22us; 22us; 22us; 22us; 23us; 24us; 24us; 25us; 25us; 25us; 25us; 25us; 25us; 25us; 25us; 25us; 25us; 26us; 26us; 26us; 26us; 27us; 27us; 27us; 27us; 28us; 28us; 29us; 30us; 31us; 32us; 32us; 32us; 33us; 33us; 34us; 34us; 35us; 35us; 36us; 36us; 36us; 37us; 38us; 38us; 38us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 16386us; 16387us; 16388us; 16389us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16390us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16392us; 65535us; 16395us; 16397us; 65535us; 65535us; 65535us; 65535us; 65535us; 16399us; 65535us; 65535us; 65535us; 65535us; 65535us; 16400us; 65535us; 65535us; 65535us; 65535us; 16401us; 65535us; 65535us; 65535us; 65535us; 16402us; 65535us; 65535us; 65535us; 65535us; 16403us; 65535us; 65535us; 65535us; 65535us; 65535us; 16404us; 65535us; 65535us; 65535us; 65535us; 65535us; 16405us; 65535us; 65535us; 65535us; 16406us; 65535us; 65535us; 65535us; 65535us; 65535us; 16407us; 65535us; 65535us; 65535us; 65535us; 16408us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16412us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 16418us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 65535us; 65535us; 16420us; 65535us; 65535us; 65535us; 65535us; 16421us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16423us; 65535us; 65535us; 16424us; 65535us; 65535us; 65535us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 16426us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16428us; 65535us; 65535us; 65535us; 65535us; 16429us; 65535us; 65535us; 16430us; 65535us; 65535us; 16432us; 65535us; 65535us; 65535us; 16433us; 65535us; 16435us; 65535us; 16439us; 65535us; 16440us; 65535us; 16442us; 65535us; 65535us; 65535us; 65535us; 16443us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16446us; 65535us; 16447us; 65535us; 65535us; 65535us; 65535us; 16448us; 65535us; 65535us; 65535us; 65535us; 65535us; 16449us; 16450us; 65535us; 65535us; 16451us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16452us; 65535us; 16453us; 65535us; 65535us; 65535us; 65535us; 65535us; 16454us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16455us; 65535us; 65535us; 16456us; 65535us; 65535us; 65535us; 16458us; 65535us; 65535us; 16459us; 16461us; 16462us; 16463us; 16464us; 16465us; 16466us; 65535us; 65535us; 65535us; 65535us; 16467us; 65535us; 65535us; 16468us; 65535us; 65535us; 16469us; 16470us; 16471us; 16472us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16473us; 65535us; 16475us; 16476us; 16477us; 16478us; 65535us; 65535us; 16479us; 65535us; 16480us; 65535us; 65535us; 65535us; 16484us; 16485us; 16486us; 65535us; 16487us; 65535us; 16488us; 16489us; 16490us; 65535us; 65535us; 16491us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16492us; 65535us; 65535us; 16494us; 65535us; 65535us; 16495us; 65535us; 16496us; 65535us; 16497us; 65535us; 16498us; 65535us; 65535us; 65535us; 65535us; 16499us; 65535us; 65535us; 16500us; 65535us; 16501us; 16502us; 65535us; 16504us; 65535us; 16505us; 65535us; 16506us; 65535us; 16508us; 65535us; 16509us; 65535us; 16510us; 65535us; 16511us; 65535us; 16512us; 65535us; 65535us; 65535us; 65535us; 16513us; 65535us; 65535us; 65535us; 65535us; 16514us; 65535us; 65535us; 65535us; 16515us; 16516us; 65535us; 65535us; 16517us; 65535us; 65535us; 16521us; 16526us; 65535us; 65535us; 65535us; 16527us; 65535us; 65535us; 16528us; 16529us; 65535us; 65535us; 16530us; |]
let _fsyacc_reductions ()  =    [| 
# 828 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  decl list )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Microsoft.FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startstart));
# 837 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "..\src\fsharp\LLVM_grammar.fsy"
                                    _1 
                   )
# 116 "..\src\fsharp\LLVM_grammar.fsy"
                 :  decl list ));
# 848 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 118 "..\src\fsharp\LLVM_grammar.fsy"
                               Var(_1) 
                   )
# 118 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'op));
# 859 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 119 "..\src\fsharp\LLVM_grammar.fsy"
                               Const(_1) 
                   )
# 119 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'op));
# 870 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 120 "..\src\fsharp\LLVM_grammar.fsy"
                                Void 
                   )
# 120 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'op));
# 880 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 121 "..\src\fsharp\LLVM_grammar.fsy"
                                 Var("undef") 
                   )
# 121 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'op));
# 890 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'indexes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "..\src\fsharp\LLVM_grammar.fsy"
                                                                    Computed(_4,_5,_6) 
                   )
# 122 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'op));
# 903 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 123 "..\src\fsharp\LLVM_grammar.fsy"
                                                               _4 
                   )
# 123 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'op));
# 916 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "..\src\fsharp\LLVM_grammar.fsy"
                                                                    () 
                   )
# 127 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'whatever));
# 929 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "..\src\fsharp\LLVM_grammar.fsy"
                                           () 
                   )
# 128 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'whatever));
# 940 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "..\src\fsharp\LLVM_grammar.fsy"
                          
                   )
# 129 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'whatever));
# 950 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "..\src\fsharp\LLVM_grammar.fsy"
                                   () 
                   )
# 134 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'errors));
# 960 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 135 "..\src\fsharp\LLVM_grammar.fsy"
                               () 
                   )
# 135 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'errors));
# 970 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 136 "..\src\fsharp\LLVM_grammar.fsy"
                               () 
                   )
# 136 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'errors));
# 980 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 137 "..\src\fsharp\LLVM_grammar.fsy"
                          
                   )
# 137 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'errors));
# 990 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'errors)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "..\src\fsharp\LLVM_grammar.fsy"
                                                       Add(_4,_6) 
                   )
# 140 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1004 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'errors)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "..\src\fsharp\LLVM_grammar.fsy"
                                                       Sub(_4,_6) 
                   )
# 141 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1018 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "..\src\fsharp\LLVM_grammar.fsy"
                                                       And(_3,_5) 
                   )
# 142 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1031 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "..\src\fsharp\LLVM_grammar.fsy"
                                                        Or(_3,_5) 
                   )
# 143 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1044 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "..\src\fsharp\LLVM_grammar.fsy"
                                                       Xor(_3,_5) 
                   )
# 144 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1057 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'errors)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "..\src\fsharp\LLVM_grammar.fsy"
                                                       Shl(_4,_6) 
                   )
# 145 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1071 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "..\src\fsharp\LLVM_grammar.fsy"
                                                       Shr(_4,_6) 
                   )
# 146 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1084 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 147 "..\src\fsharp\LLVM_grammar.fsy"
                                                       Shr(_3,_5) 
                   )
# 147 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1097 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'errors)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 148 "..\src\fsharp\LLVM_grammar.fsy"
                                                       Mul(_4,_6) 
                   )
# 148 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1111 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "..\src\fsharp\LLVM_grammar.fsy"
                                                       Srem(_3,_5) 
                   )
# 149 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1124 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 151 "..\src\fsharp\LLVM_grammar.fsy"
                                                    Zext(_3) 
                   )
# 151 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1137 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 152 "..\src\fsharp\LLVM_grammar.fsy"
                                                    Zext(_3) 
                   )
# 152 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1150 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 153 "..\src\fsharp\LLVM_grammar.fsy"
                                                    Zext(_3) 
                   )
# 153 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1163 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "..\src\fsharp\LLVM_grammar.fsy"
                                                     Eq(_4,_6) 
                   )
# 155 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1176 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "..\src\fsharp\LLVM_grammar.fsy"
                                                     Neq(_4,_6) 
                   )
# 156 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1189 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 157 "..\src\fsharp\LLVM_grammar.fsy"
                                                     Sge(_4,_6) 
                   )
# 157 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1202 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 158 "..\src\fsharp\LLVM_grammar.fsy"
                                                     Sle(_4,_6) 
                   )
# 158 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1215 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 159 "..\src\fsharp\LLVM_grammar.fsy"
                                                     Sgt(_4,_6) 
                   )
# 159 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1228 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "..\src\fsharp\LLVM_grammar.fsy"
                                                     Slt(_4,_6) 
                   )
# 160 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1241 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "..\src\fsharp\LLVM_grammar.fsy"
                                                     Ult(_4,_6) 
                   )
# 161 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1254 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 162 "..\src\fsharp\LLVM_grammar.fsy"
                                                     Ugt(_4,_6) 
                   )
# 162 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1267 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'whatever)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 163 "..\src\fsharp\LLVM_grammar.fsy"
                                                     Load(_3) 
                   )
# 163 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1280 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'indexes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 164 "..\src\fsharp\LLVM_grammar.fsy"
                                                       Addr(_3,_4,_5) 
                   )
# 164 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1293 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'indexes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "..\src\fsharp\LLVM_grammar.fsy"
                                                       Addr(_2,_3,_4) 
                   )
# 165 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1306 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "..\src\fsharp\LLVM_grammar.fsy"
                                                                   Select(_3,_6,_9) 
                   )
# 166 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1322 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pres)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "..\src\fsharp\LLVM_grammar.fsy"
                                                  Phi(_3) 
                   )
# 167 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1334 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "..\src\fsharp\LLVM_grammar.fsy"
                                                      Alloc(_2) 
                   )
# 168 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1346 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "..\src\fsharp\LLVM_grammar.fsy"
                                                                     AllocN(_2,_5) 
                   )
# 169 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1359 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "..\src\fsharp\LLVM_grammar.fsy"
                                                      BitCast(_5,_3) 
                   )
# 170 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1372 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'callhdr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'call)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "..\src\fsharp\LLVM_grammar.fsy"
                                                      _3 
                   )
# 171 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'expr));
# 1385 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "..\src\fsharp\LLVM_grammar.fsy"
                                                             _4,Some _2 
                   )
# 175 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'pre));
# 1397 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "..\src\fsharp\LLVM_grammar.fsy"
                                                             _4,None 
                   )
# 176 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'pre));
# 1408 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pre)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "..\src\fsharp\LLVM_grammar.fsy"
                                           [_1] 
                   )
# 178 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'pres));
# 1419 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pre)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'pres)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "..\src\fsharp\LLVM_grammar.fsy"
                                           _1::_3
                   )
# 179 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'pres));
# 1431 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'indexes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "..\src\fsharp\LLVM_grammar.fsy"
                                                _3 :: _4 
                   )
# 182 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'indexes));
# 1444 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "..\src\fsharp\LLVM_grammar.fsy"
                                        [] 
                   )
# 183 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'indexes));
# 1454 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "..\src\fsharp\LLVM_grammar.fsy"
                                        _2 
                   )
# 185 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'label));
# 1465 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "..\src\fsharp\LLVM_grammar.fsy"
                                         
                   )
# 187 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'nounwind));
# 1475 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "..\src\fsharp\LLVM_grammar.fsy"
                                                     
                   )
# 187 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'nounwind));
# 1485 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "..\src\fsharp\LLVM_grammar.fsy"
                                                          
                   )
# 187 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'nounwind));
# 1495 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'callhdr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "..\src\fsharp\LLVM_grammar.fsy"
                                       
                   )
# 191 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'callhdr));
# 1506 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "..\src\fsharp\LLVM_grammar.fsy"
                                      
                   )
# 192 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'callhdr));
# 1516 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "..\src\fsharp\LLVM_grammar.fsy"
                               
                   )
# 193 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'callhdr));
# 1526 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'calltail)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 195 "..\src\fsharp\LLVM_grammar.fsy"
                                          
                   )
# 195 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'calltail));
# 1537 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 196 "..\src\fsharp\LLVM_grammar.fsy"
                                                   
                   )
# 196 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'calltail));
# 1549 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 197 "..\src\fsharp\LLVM_grammar.fsy"
                          
                   )
# 197 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'calltail));
# 1559 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "..\src\fsharp\LLVM_grammar.fsy"
                                                                         
                   )
# 202 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'vartyp));
# 1569 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "..\src\fsharp\LLVM_grammar.fsy"
                                                                         
                   )
# 203 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'vartyp));
# 1579 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'vartyp)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'call)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "..\src\fsharp\LLVM_grammar.fsy"
                                       _2 
                   )
# 207 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'call));
# 1591 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'args)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'calltail)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "..\src\fsharp\LLVM_grammar.fsy"
                                                           Call(_1,_3) 
                   )
# 208 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'call));
# 1604 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'label)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'branches)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "..\src\fsharp\LLVM_grammar.fsy"
                                                                 (_2,_4)::_6 
                   )
# 212 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'branches));
# 1617 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "..\src\fsharp\LLVM_grammar.fsy"
                                    [] 
                   )
# 213 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'branches));
# 1627 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'expr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "..\src\fsharp\LLVM_grammar.fsy"
                                                                Let(_1,_3)  
                   )
# 216 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'line));
# 1639 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'whatever)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 217 "..\src\fsharp\LLVM_grammar.fsy"
                                                                Store(_6,_3) 
                   )
# 217 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'line));
# 1654 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'label)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 218 "..\src\fsharp\LLVM_grammar.fsy"
                                                                Branch(_2) 
                   )
# 218 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'line));
# 1665 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'label)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'label)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 219 "..\src\fsharp\LLVM_grammar.fsy"
                                                                BranchIf(_3,_5,_7) 
                   )
# 219 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'line));
# 1678 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'label)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'branches)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "..\src\fsharp\LLVM_grammar.fsy"
                                                                                   Switch(_3,_5,_8) 
                   )
# 220 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'line));
# 1691 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'callhdr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'call)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "..\src\fsharp\LLVM_grammar.fsy"
                                                                Let("%null",_3) 
                   )
# 221 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'line));
# 1703 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 222 "..\src\fsharp\LLVM_grammar.fsy"
                                                                Return(Void) 
                   )
# 222 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'line));
# 1713 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 223 "..\src\fsharp\LLVM_grammar.fsy"
                                                                Return(_3) 
                   )
# 223 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'line));
# 1725 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'line)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'lines)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "..\src\fsharp\LLVM_grammar.fsy"
                                             _1 :: _3 
                   )
# 226 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'lines));
# 1737 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 227 "..\src\fsharp\LLVM_grammar.fsy"
                                             [] 
                   )
# 227 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'lines));
# 1747 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "..\src\fsharp\LLVM_grammar.fsy"
                                       Tvar _1 
                   )
# 230 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1758 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "..\src\fsharp\LLVM_grammar.fsy"
                                       Int 1  
                   )
# 231 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1768 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "..\src\fsharp\LLVM_grammar.fsy"
                                       Int 8  
                   )
# 232 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1778 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 233 "..\src\fsharp\LLVM_grammar.fsy"
                                       Int 16 
                   )
# 233 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1788 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 234 "..\src\fsharp\LLVM_grammar.fsy"
                                       Int 32 
                   )
# 234 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1798 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 235 "..\src\fsharp\LLVM_grammar.fsy"
                                       Int 64 
                   )
# 235 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1808 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "..\src\fsharp\LLVM_grammar.fsy"
                                                            Array(_2,_4) 
                   )
# 236 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1820 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 237 "..\src\fsharp\LLVM_grammar.fsy"
                                               Struct(_2) 
                   )
# 237 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1831 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 238 "..\src\fsharp\LLVM_grammar.fsy"
                                              _2 
                   )
# 238 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1842 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 239 "..\src\fsharp\LLVM_grammar.fsy"
                                       Tvar "opaque" 
                   )
# 239 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1852 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "..\src\fsharp\LLVM_grammar.fsy"
                                       TVoid 
                   )
# 240 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1862 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 241 "..\src\fsharp\LLVM_grammar.fsy"
                                       TVoid 
                   )
# 241 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1872 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 242 "..\src\fsharp\LLVM_grammar.fsy"
                                       Ptr _1 
                   )
# 242 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1883 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "..\src\fsharp\LLVM_grammar.fsy"
                                        _2 
                   )
# 244 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1894 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 245 "..\src\fsharp\LLVM_grammar.fsy"
                                        _1 
                   )
# 245 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1905 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 246 "..\src\fsharp\LLVM_grammar.fsy"
                                                _1 
                   )
# 246 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1916 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "..\src\fsharp\LLVM_grammar.fsy"
                                                _1 
                   )
# 247 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1927 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 248 "..\src\fsharp\LLVM_grammar.fsy"
                                                _1 
                   )
# 248 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1938 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 249 "..\src\fsharp\LLVM_grammar.fsy"
                                                _1 
                   )
# 249 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typ));
# 1950 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "..\src\fsharp\LLVM_grammar.fsy"
                                             _1::_3 
                   )
# 252 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typs));
# 1962 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "..\src\fsharp\LLVM_grammar.fsy"
                                             [_1] 
                   )
# 253 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typs));
# 1973 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "..\src\fsharp\LLVM_grammar.fsy"
                                             [] 
                   )
# 254 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typs));
# 1983 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 256 "..\src\fsharp\LLVM_grammar.fsy"
                                                   TypeDef(_1,_4) 
                   )
# 256 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'typDef));
# 1995 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 259 "..\src\fsharp\LLVM_grammar.fsy"
                                            None 
                   )
# 259 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'initializer));
# 2005 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 260 "..\src\fsharp\LLVM_grammar.fsy"
                                            None 
                   )
# 260 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'initializer));
# 2015 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 261 "..\src\fsharp\LLVM_grammar.fsy"
                                            Some(_1) 
                   )
# 261 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'initializer));
# 2026 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'globalQualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 264 "..\src\fsharp\LLVM_grammar.fsy"
                                                    
                   )
# 264 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'globalQualifier));
# 2037 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'globalQualifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 265 "..\src\fsharp\LLVM_grammar.fsy"
                                                    
                   )
# 265 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'globalQualifier));
# 2048 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 266 "..\src\fsharp\LLVM_grammar.fsy"
                                    
                   )
# 266 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'globalQualifier));
# 2058 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 267 "..\src\fsharp\LLVM_grammar.fsy"
                                    
                   )
# 267 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'globalQualifier));
# 2068 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'globalQualifier)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'initializer)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'whatever)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 270 "..\src\fsharp\LLVM_grammar.fsy"
                                                                                GlobalDef(_1,_4,_5) 
                   )
# 270 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'globalDef));
# 2083 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : System.Int32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 273 "..\src\fsharp\LLVM_grammar.fsy"
                                                                                               GlobalStr(_1,_7) 
                   )
# 273 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'globalStr));
# 2097 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 274 "..\src\fsharp\LLVM_grammar.fsy"
                                                                                               GlobalStr(_1,_7) 
                   )
# 274 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'globalStr));
# 2110 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'funDecl)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 278 "..\src\fsharp\LLVM_grammar.fsy"
                                                           _3 
                   )
# 278 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'decls));
# 2122 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'funDef)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 279 "..\src\fsharp\LLVM_grammar.fsy"
                                                           _2::_3 
                   )
# 279 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'decls));
# 2134 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typDef)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 280 "..\src\fsharp\LLVM_grammar.fsy"
                                                           _1::_2 
                   )
# 280 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'decls));
# 2146 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'globalDef)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 281 "..\src\fsharp\LLVM_grammar.fsy"
                                                           _1::_2 
                   )
# 281 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'decls));
# 2158 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'globalStr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 282 "..\src\fsharp\LLVM_grammar.fsy"
                                                           _1::_2 
                   )
# 282 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'decls));
# 2170 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 283 "..\src\fsharp\LLVM_grammar.fsy"
                                                           _5 
                   )
# 283 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'decls));
# 2183 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 284 "..\src\fsharp\LLVM_grammar.fsy"
                                                           _3 
                   )
# 284 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'decls));
# 2194 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'decls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 285 "..\src\fsharp\LLVM_grammar.fsy"
                                                           _2 
                   )
# 285 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'decls));
# 2205 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 286 "..\src\fsharp\LLVM_grammar.fsy"
                                                           [] 
                   )
# 286 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'decls));
# 2215 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 287 "..\src\fsharp\LLVM_grammar.fsy"
                                                           [] 
                   )
# 287 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'decls));
# 2225 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'words)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 289 "..\src\fsharp\LLVM_grammar.fsy"
                                         
                   )
# 289 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'words));
# 2237 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'words)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 290 "..\src\fsharp\LLVM_grammar.fsy"
                                         
                   )
# 290 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'words));
# 2248 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'words)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 291 "..\src\fsharp\LLVM_grammar.fsy"
                                       
                   )
# 291 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'words));
# 2259 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 292 "..\src\fsharp\LLVM_grammar.fsy"
                                         
                   )
# 292 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'words));
# 2269 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'funDef)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 295 "..\src\fsharp\LLVM_grammar.fsy"
                                          _2 
                   )
# 295 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'funDef));
# 2280 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'funDef)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 296 "..\src\fsharp\LLVM_grammar.fsy"
                                           _2 
                   )
# 296 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'funDef));
# 2291 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'funDef)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 297 "..\src\fsharp\LLVM_grammar.fsy"
                                           _2 
                   )
# 297 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'funDef));
# 2302 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'funSig)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'funBody)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 298 "..\src\fsharp\LLVM_grammar.fsy"
                                          FunDef(_1,_2) 
                   )
# 298 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'funDef));
# 2314 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'funDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 302 "..\src\fsharp\LLVM_grammar.fsy"
                                           () 
                   )
# 302 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'funDecl));
# 2325 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typs)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'words)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 303 "..\src\fsharp\LLVM_grammar.fsy"
                                                            () 
                   )
# 303 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'funDecl));
# 2339 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'formals)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'words)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 305 "..\src\fsharp\LLVM_grammar.fsy"
                                                                   _1,_2,_4 
                   )
# 305 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'funSig));
# 2353 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'blocks)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 306 "..\src\fsharp\LLVM_grammar.fsy"
                                                             _3 
                   )
# 306 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'funBody));
# 2364 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 309 "..\src\fsharp\LLVM_grammar.fsy"
                                             _1,_2 
                   )
# 309 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'formal));
# 2376 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'formal)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'formals)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 312 "..\src\fsharp\LLVM_grammar.fsy"
                                                  _1::_3 
                   )
# 312 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'formals));
# 2388 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'formal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 313 "..\src\fsharp\LLVM_grammar.fsy"
                                                  [_1] 
                   )
# 313 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'formals));
# 2399 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 314 "..\src\fsharp\LLVM_grammar.fsy"
                                                  [] 
                   )
# 314 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'formals));
# 2409 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  block )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 317 "..\src\fsharp\LLVM_grammar.fsy"
                                                 [_1] 
                   )
# 317 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'blocks));
# 2420 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  block )) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'blocks)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 318 "..\src\fsharp\LLVM_grammar.fsy"
                                                 _1::_3 
                   )
# 318 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'blocks));
# 2432 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'vars)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 321 "..\src\fsharp\LLVM_grammar.fsy"
                                           _1::_3 
                   )
# 321 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'vars));
# 2444 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 322 "..\src\fsharp\LLVM_grammar.fsy"
                                           [_1] 
                   )
# 322 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'vars));
# 2455 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'vars)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 325 "..\src\fsharp\LLVM_grammar.fsy"
                                                    () 
                   )
# 325 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'preds));
# 2466 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 326 "..\src\fsharp\LLVM_grammar.fsy"
                                                    () 
                   )
# 326 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'preds));
# 2476 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'lines)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 329 "..\src\fsharp\LLVM_grammar.fsy"
                                                                          mkBlock "%0"              _1 
                   )
# 329 "..\src\fsharp\LLVM_grammar.fsy"
                 :  block ));
# 2487 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'lines)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 330 "..\src\fsharp\LLVM_grammar.fsy"
                                                                          mkBlock ("%" + _1)        _4 
                   )
# 330 "..\src\fsharp\LLVM_grammar.fsy"
                 :  block ));
# 2499 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'lines)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 331 "..\src\fsharp\LLVM_grammar.fsy"
                                                                          mkBlock ("%" + _1)        _5 
                   )
# 331 "..\src\fsharp\LLVM_grammar.fsy"
                 :  block ));
# 2511 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typ)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'op)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 339 "..\src\fsharp\LLVM_grammar.fsy"
                                   _2 
                   )
# 339 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'arg));
# 2523 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arg)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'args)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 341 "..\src\fsharp\LLVM_grammar.fsy"
                                             _1::_3 
                   )
# 341 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'args));
# 2535 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 342 "..\src\fsharp\LLVM_grammar.fsy"
                                             [_1]   
                   )
# 342 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'args));
# 2546 "..\src\fsharp\LLVM_grammar.fs"
        (fun (parseState : Microsoft.FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 343 "..\src\fsharp\LLVM_grammar.fsy"
                                             []     
                   )
# 343 "..\src\fsharp\LLVM_grammar.fsy"
                 : 'args));
|]
# 2557 "..\src\fsharp\LLVM_grammar.fs"
let tables () : Microsoft.FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Microsoft.FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 99;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let start lexer lexbuf :  decl list  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
